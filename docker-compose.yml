version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: claude_projects_postgres
    environment:
      POSTGRES_DB: claude_projects
      POSTGRES_USER: claude_user
      POSTGRES_PASSWORD: claude_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/database/migrations:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U claude_user -d claude_projects"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: claude_projects_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build: ./backend
    container_name: claude_projects_backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgres://claude_user:claude_password@postgres:5432/claude_projects
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-change-in-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-jwt-refresh-secret-change-in-production}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-52428800}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@example.com}
      DEFAULT_TOKEN_LIMIT_GLOBAL: ${DEFAULT_TOKEN_LIMIT_GLOBAL:-1000000}
      DEFAULT_TOKEN_LIMIT_MONTHLY: ${DEFAULT_TOKEN_LIMIT_MONTHLY:-100000}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: claude_projects_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: